<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 C:\Grobid\grobid-0.5.5\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.5" ident="GROBID" when="2019-09-05T11:43+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Neural Code Comprehension: A Learnable Representation of Code Semantics</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tal</forename><surname>Ben-Nun</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">ETH Zurich Zurich</orgName>
								<address>
									<postCode>8092</postCode>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alice</forename><forename type="middle">Shoshana</forename><surname>Jakobovits</surname></persName>
							<email>alicej@student.ethz.ch</email>
							<affiliation key="aff1">
								<orgName type="institution">ETH Zurich</orgName>
								<address>
									<postCode>8092</postCode>
									<settlement>Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Torsten</forename><surname>Hoefler</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">ETH Zurich</orgName>
								<address>
									<postCode>8092</postCode>
									<settlement>Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Neural Code Comprehension: A Learnable Representation of Code Semantics</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Abstract</head><p>With the recent success of embeddings in natural language processing, research has been conducted into applying similar methods to code analysis. Most works attempt to process the code directly or use a syntactic tree representation, treating it like sentences written in a natural language. However, none of the existing methods are sufficient to comprehend program semantics robustly, due to structural features such as function calls, branching, and interchangeable order of statements. In this paper, we propose a novel processing technique to learn code semantics, and apply it to a variety of program analysis tasks. In particular, we stipulate that a robust distributional hypothesis of code applies to both human-and machine-generated programs. Following this hypothesis, we define an embedding space, inst2vec, based on an Intermediate Representation (IR) of the code that is independent of the source programming language. We provide a novel definition of contextual flow for this IR, leveraging both the underlying data-and control-flow of the program. We then analyze the embeddings qualitatively using analogies and clustering, and evaluate the learned representation on three different high-level tasks. We show that with a single RNN architecture and pre-trained fixed embeddings, inst2vec outperforms specialized approaches for performance prediction (compute device mapping, optimal thread coarsening); and algorithm classification from raw code (104 classes), where we set a new state-of-the-art.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The emergence of the "big data era" manifests in the form of a dramatic increase in accessible code. In the year 2017 alone, GitHub reports <ref type="bibr" target="#b23">[24]</ref> approximately 1 billion git commits (code modification uploads) written in 337 different programming languages. Sifting through, categorizing, and understanding code thus becomes an essential task for a variety of fields. Applications include identifying code duplication, performance prediction, algorithm detection for alternative code suggestion (guided programming), vulnerability analysis, and malicious code detection. These tasks are challenging, as code can be modified such that it syntactically differs (for instance, via different or reordered operations, or written in a different language altogether), but remains semantically equivalent (i.e., produces the same result). However, these tasks are also ideal for machine learning, since they can be represented as classic regression and classification problems.</p><p>In order to mechanize code comprehension, the research community typically employs reinforcement learning and stochastic compilation for super-optimization <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b52">53]</ref>; or borrows concepts from Natural Language Processing (NLP) for human-authored code, relying on the following hypothesis:</p><p>The naturalness hypothesis <ref type="bibr" target="#b2">[3]</ref>. Software is a form of human communication; software corpora have similar statistical properties to natural language corpora; and these properties can be exploited to build better software engineering tools. This paper presents Neural Code Comprehension: a general-purpose processing pipeline geared towards representing code semantics in a robust and learnable manner. The pipeline, depicted in <ref type="figure">Fig. 1</ref>, accepts code in various source languages and converts it to statements in an Intermediate Representation (IR), using the LLVM Compiler Infrastructure <ref type="bibr" target="#b35">[36]</ref>. The LLVM IR, which is explained in detail in Section 4, is then processed to a robust representation that we call conteXtual Flow Graphs (XFGs). XFGs are constructed from both the data-and control-flow of the code, thus inherently supporting loops and function calls. In turn, the XFG structure is used to train an embedding space for individual statements, called inst2vec (from the word "instruction"), which is fed to RNNs for a variety of high-level tasks.</p><p>Neural Code Comprehension is evaluated on multiple levels, using clustering and analogies for inst2vec, as well as three different code comprehension tasks for XFGs: algorithm classification; heterogeneous compute device (e.g., CPU, GPU) mapping; and optimal thread coarsening factor prediction, which model the runtime of an application without running it. Our datasets contain CPU and GPU code written in C, C++, OpenCL, and FORTRAN, though LLVM supports additional languages such as Python, Rust, Swift, Go, and CUDA. Our work makes the following contributions:</p><p>• We formulate a robust distributional hypothesis for code, from which we draw a novel distributed representation of code statements based on contextual flow and LLVM IR.</p><p>• We evaluate the representation using clustering, analogies, and three fundamentally different high-level code learning tasks.</p><p>• Using one simple LSTM architecture and fixed pre-trained embeddings, we match or surpass the best-performing approaches in each task, including specialized DNN architectures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Distributed representations of code were first suggested by Allamanis et al. <ref type="bibr" target="#b1">[2]</ref>, followed by several works leveraging embeddings to apply NLP techniques to programming languages <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b56">57]</ref>.</p><p>Code Representation Previous research focuses on embedding high-level programming languages such as Java <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b27">28]</ref>, C <ref type="bibr" target="#b37">[38]</ref>, or OpenCL <ref type="bibr" target="#b16">[17]</ref> in the form of tokens or statements, as well as lower level representations such as object code <ref type="bibr" target="#b37">[38]</ref>. To the best of our knowledge, however, no attempt has been made to train embeddings for compiler IRs prior to this work. As for representing the context of a token, which is necessary for training embeddings, some works rely on textual locality <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b18">19]</ref>, whereas others exploit the structural nature of code, using trees <ref type="bibr" target="#b10">[11,</ref><ref type="bibr" target="#b27">28]</ref>, paths <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>, and graph representations <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b47">48,</ref><ref type="bibr" target="#b49">50]</ref>. We differ from all previous approaches by introducing contextual flow, a graph representation that captures both data and control dependencies. In compiler research, similar graphs exist but have not been successfully exploited for machine learning. Examples include the Program Dependence Graph <ref type="bibr" target="#b22">[23]</ref> and Sea of Nodes <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15]</ref>. Unlike these representations, our graphs are not designed to be optimized by a compiler nor translated to machine code, which allows us to introduce ambiguity (e.g., ignoring parameter order) in favor of preserving context.</p><p>Automated Tasks on Code Learned representations of code are commonly used for two types of tasks: uncovering program semantics or optimizing programs. For the former task, code embeddings have been used to perform function or variable naming <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b6">7]</ref>, clone detection <ref type="bibr" target="#b57">[58]</ref>, code completion <ref type="bibr" target="#b50">[51,</ref><ref type="bibr" target="#b58">59]</ref>, summarization <ref type="bibr" target="#b5">[6]</ref>, and algorithm classification <ref type="bibr" target="#b45">[46]</ref>. As for the latter task, research has been conducted on automatic feature generation for code <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b46">47]</ref>; and Cummins et al. <ref type="bibr" target="#b16">[17]</ref> notably leverage embeddings of OpenCL code to predict optimal device mapping and thread coarsening factors. Their work differs from ours in that the method is restricted to the OpenCL language, and that they process programs in a sequential order, which does not capture complex code structures.</p><p>Embedding Evaluation Previous works that use code embeddings do not evaluate the quality of the trained space on its own merit, but rather through the performance of subsequent tasks. One exception is Allamanis et al. <ref type="bibr" target="#b1">[2]</ref>, who present empirical evidence of vector similarities for similar method names.</p><p>To the best of our knowledge, we are the first to quantify the quality of a code embedding space itself in the form of clustering, syntactic analogies, semantic analogies, and categorical distance tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">A Robust Distributional Hypothesis of Code</head><p>The linguistic Distributional Hypothesis <ref type="bibr" target="#b29">[30,</ref><ref type="bibr" target="#b48">49]</ref> is given by: Words that occur in the same contexts tend to have similar meanings. We stipulate that code, which describes a sequence of operations to a processor, behaves similarly, and paraphrase this hypothesis to:</p><p>Statements that occur in the same contexts tend to have similar semantics.</p><p>However, the above wording is vague, due to the possible meanings of the highlighted elements. Below we attempt to provide adequate definitions, upon which we build a learnable code representation.</p><p>Statements To choose the right abstraction for statements, we take two concerns into account: universality and uniformity. As stated above, source code comes in many languages and thus fixating on a single one would hinder universality. At the other extreme, machine code (assembly) is target-specific, containing specialized instructions and relying on hardware characteristics, such as registers and memory architectures. As for uniformity, in a high-level language one statement may represent simple arithmetics, multiple operations, or even class definitions (for example, the Java statement button.setOnClickListener(new View.OnClickListener(){...})). On the other hand, assembly is too limited, since instructions are reused for different purposes. We thus wish to choose statements that are independent of the source language, as well as the hardware architecture.</p><p>Context The definition of a context for code statements should also be carefully considered. We define context as statements whose execution directly depends on each other. Learning from consecutive statements does not necessarily fulfill this definition, as, for example, a programmer may use a variable in the first line of a function, but only use it again in the last line. Moreover, such long-term relationships may vanish when using RNNs and attention learning. It is possible to determine the data dependencies of each statement by analyzing dataflow, however, branches and function calls do not necessarily generate such dependencies. Another way of representing execution dependence is through the notion of causality (i.e., the "happens-before" relation <ref type="bibr" target="#b34">[35]</ref>), which can be used to complement dataflow. Therefore, in our representation, context is the union of data dependence and execution dependence.</p><p>Similarity To define similarity, one first needs to define the semantics of a statement. In this paper, we assume that each statement modifies the system state in a certain way (e.g., adds two numbers) and consumes resources (e.g., uses registers and floating-point units). It follows that semantic similarity can be defined by two statements consuming the same resources or modifying the system state in a similar way. Using this definition, two versions of the same algorithm with different variable types would be synonymous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Contextual Flow Processing</head><p>The aforementioned statements and contexts cannot be directly extracted from source code, but rather require processing akin to partial compilation (e.g., dataflow extraction). In this section, we briefly describe a popular compilation pipeline and proposed modifications to create a learnable vocabulary of statements and their context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Compilation, Static Single Assignment, and LLVM IR</head><p>Major contemporary compilers, such as GCC and LLVM, support multiple programming languages and hardware targets. To avoid duplication in code optimization techniques, they enforce a strict separation between the source language (frontend), an Intermediate Representation (IR) that can be optimized, and the target machine code (backend) that should be mapped to a specific hardware. In particular, the LLVM IR <ref type="bibr" target="#b41">[42]</ref> supports various architectures (e.g., GPUs), and can represent optimized code (e.g., using vector registers) inherently. Figures 2a and 2b depict an example code and its LLVM IR equivalent, and the structure of an LLVM IR statement is shown in <ref type="figure">Fig. 3</ref>. In the LLVM infrastructure, the IR is given in Static Single Assignment (SSA) form <ref type="bibr" target="#b17">[18]</ref>. Briefly, an SSA IR ensures that every variable is assigned only once, which makes it easy to track dataflow between IR statements, as shown in <ref type="figure">Fig. 4</ref>. To overcome analysis issues resulting from control-flow, such as loops, SSA defines φ-expressions. These expressions enumerate all possible outcomes that can lead to a variable (depending on the runtime control-flow), and can be used to optimize code across branches. In <ref type="figure" target="#fig_0">Fig. 2b</ref>, the identifier %4 is constructed from a φ-expression that can take either value %2 or %3, depending on the value of x.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Contextual Flow Graphs</head><p>To analyze dataflow for optimization, LLVM divides the IR statements into "basic blocks", which contain no control-flow divergence, illustrated in <ref type="figure" target="#fig_0">Fig. 2c</ref>. Within a basic block, statements naturally create traceable dataflow as SSA lists data dependencies in the form of input identifiers (even if conditional), and assigns the results to a single identifier. However, as shown in Section 3, dataflow alone does not suffice to provide context for a given statement, e.g., when in the vicinity of a branch. Therefore, we define a representation that incorporates both the relative data-and control-flow of a statement, which we call the conteXtual Flow Graph (XFG).</p><p>XFGs (e.g., <ref type="figure" target="#fig_0">Fig. 2d</ref>) are directed multigraphs, where two nodes can be connected by more than one edge. XFG nodes can either be variables or label identifiers (e.g., basic block, function name), appearing in the figure as ovals or rectangles respectively. Correspondingly, an edge either represents data-dependence (in black), carrying an LLVM IR statement; or execution dependence (light blue).</p><p>Creating XFGs from LLVM IR follows a simple rule-set for adding edges: (i) data dependencies within a basic block are connected; (ii) inter-block dependencies (e.g., φ-expressions) are both connected directly and through the label identifier (statement-less edges); (iii) identifiers without a dataflow parent are connected to their respective root node (label or program root). It follows that XFGs create paths through dataflow as well as branches, loops, and functions (including recursion).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">inst2vec: Embedding Statements in Continuous Space</head><p>With the XFGs providing a notion of context, we can now train an embedding space for individual statements. To support learnability, desiderata for such a space include: (a) statements that are in close proximity should have similar artifacts on a system (i.e., use the same resources); and (b) changing the same attributes (e.g., data type) for different instructions should result in a similar offset in the space. We train LLVM IR statement embeddings using the skip-gram model <ref type="bibr" target="#b44">[45]</ref>, following preprocessing to limit the vocabulary size.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Statement Preprocessing and Training</head><p>Preprocessing First, we filter out all comments and metadata from statements. Then, identifiers and immediate values (e.g., numeric constants, strings) are replaced with %ID and &lt;IMM&gt; respectively, where immediate values can be fed separately to high-level task RNNs. Lastly, data structures are "inlined", that is, their contents are encoded within the statement. <ref type="figure" target="#fig_2">Fig. 5</ref> lists three statements before and after preprocessing. Dataset <ref type="table" target="#tab_0">Table 1</ref> summarizes the code corpora and vocabulary statistics of the inst2vec dataset. We choose corpora from different disciplines, including high-performance computing, benchmarks, operating systems, climate sciences, computer vision, machine learning (using Tensorflow's own source code), and synthetically-generated programs. The code in the dataset is written in C, C++, FORTRAN, and OpenCL, and is compiled for Intel CPUs as well as NVIDIA and AMD GPUs. The files in the dataset were compiled to LLVM IR with Clang <ref type="bibr" target="#b40">[41]</ref> and Flang <ref type="bibr" target="#b39">[40]</ref>, using compilation flags from the original code (if available) and randomly chosen compiler optimization (e.g., -ffast-math) and target architecture flags.</p><p>For the synthetic corpus, we use both C code and the Eigen <ref type="bibr" target="#b28">[29]</ref> C++ library. In particular, random linear algebra operations are procedurally generated from high-level templates using different parameters, such as data types, operations, and dimensions.</p><p>Setup and Training Given a set of XFGs created from the LLVM IR files, we generate neighboring statement pairs up to a certain context size, following the skip-gram model <ref type="bibr" target="#b44">[45]</ref>. A context of size N includes all statement pairs that are connected by a path shorter or equal to N . To obtain the pairs, we construct a dual graph in which statements are nodes, omitting duplicate edges. Following this process, we discard statements that occur less than 300 times in the dataset, pairs of identical statements, and perform subsampling of frequent pairs, similarly to Mikolov et al. <ref type="bibr" target="#b44">[45]</ref>. We train inst2vec with an embedding dimension of 200 for 5 epochs using Tensorflow <ref type="bibr" target="#b0">[1]</ref>. The Adam optimizer <ref type="bibr" target="#b33">[34]</ref> is used with the default published hyperparameters and softmax cross-entropy loss.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Evaluation</head><p>Clustering <ref type="figure" target="#fig_3">Fig. 6</ref> depicts the t-SNE <ref type="bibr" target="#b55">[56]</ref> plots for trained inst2vec spaces with different XFG context sizes, colored by statement and data type (legend in Appendix A). In the plots, we see that both a context size of 1 statement in each direction <ref type="figure" target="#fig_3">(Fig. 6a</ref>) or 3 statements <ref type="figure" target="#fig_3">(Fig. 6c</ref>) generate large, multi-type clusters, as well as outliers. This phenomenon eventually contributes to a lower final analogy score, due to inappropriate representation of inter-statement relations, as can be seen below.</p><p>Owing to these results, we choose a context size of 2 statements <ref type="figure" target="#fig_3">(Fig. 6b)</ref>, which mostly consists of separate, monochromatic clusters, indicating strong clustering w.r.t. instruction and data types. While data type syntactic clusters are unsurprising, their existence is not trivial, since the dataset contains diverse codebases rather than copies of the same functions with different types.</p><p>An example of a semantically-similar statement cluster can be found in data structures. In particular, the top-5 nearest neighbors of operations on the complex data type "std::complex&lt;float&gt;" include "2 x float" (i.e., a vector type). In fact, LLVM IR represents the complex data type as {float, float}, so this property is generalized to any user-defined data structure (struct) with two floats.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Analogies and Tests</head><p>We also evaluate inst2vec by automatically generating a list of statement analogies ("a" is to "b" as "c" is to "?", or "a:b; c:?") that appear in our vocabulary using the LLVM IR syntax. We then use the embeddings to find the result by computing a-b+c and asking whether the result is in the top-5 neighbors (cosine distance). Additionally, we automatically create relative distance expressions using the LLVM IR reference categories <ref type="bibr" target="#b41">[42]</ref> of the form d(a, b) &lt; d(a, c) to test whether statements that use different resources are further away than those who use the same.  different categories, including data types (i.e., transitions between types), options (e.g., fast math), conversions (e.g., bit casting, extension, truncation), and data structures (e.g., vector-type equivalents of structures). Below are examples of a type analogy: The results confirm that over all scores, a context size of 2 is the best-performing configuration.</p><formula xml:id="formula_0">%ID</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Code Comprehension Experiments</head><p>In this section, we evaluate inst2vec on three different tasks, comparing with manually-extracted features and state-of-the-art specialized deep learning approaches. Throughout all tasks, we use the same neural network architecture and our pre-trained embedding matrix from Section 5.</p><p>Training Our recurrent network consists of an inst2vec input with an XFG context size of 2, followed by two stacked LSTM <ref type="bibr" target="#b30">[31]</ref> layers with 200 units in each layer, batch normalization <ref type="bibr" target="#b31">[32]</ref>, a dense 32-neuron layer with ReLU activations, and output units matching the number of classes. The loss function is a categorical cross-entropy trained using Adam <ref type="bibr" target="#b33">[34]</ref> with the default hyperparameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Datasets</head><p>The algorithm classification task uses the POJ-104 [46] dataset 1 , collected from a Pedagogical Open Judge system. The dataset contains 104 program classes written by 500 different people (randomly selected subset per class). For the compute device mapping and optimal thread coarsening factor prediction tasks, we use an OpenCL code dataset 2 provided by Cummins et al. <ref type="bibr" target="#b16">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Algorithm Classification</head><p>Using inst2vec, we construct an RNN that reads embedded source code and outputs a predicted program class. We compare our approach with Tree-Based CNNs (TBCNN) <ref type="bibr" target="#b45">[46]</ref>, the best-performing algorithm classifier in the POJ-104 dataset. TBCNN constructs embeddings from Astract Syntax Tree nodes of source code, and employs two specialized layers: tree convolutions and dynamic pooling. Their network comprises 5 layers, where convolution and fully connected layers are 600-dimensional. Our data preparation follows the experiment conducted by Mou et al. <ref type="bibr" target="#b45">[46]</ref>, splitting the dataset 3:1:1 for training, validation, and testing. To compile the programs successfully, we prepend #include statements to each file. Data augmentation is then applied on the training set by compiling each file 8 times with different flags (-O{0-3}, -ffast-math).  <ref type="table" target="#tab_3">Table 3</ref> compares inst2vec (trained for 100 epochs) with the reported results of Mou et al. <ref type="bibr" target="#b45">[46]</ref>, which contain TBCNN as well as a 600-cell RNN and a manual feature extraction approach (Surface Features). The results show that inst2vec sets a new state-of-the-art with a 13.8% decrease in error, even though the dataset used to generate the embeddings does not include POJ-104 (see <ref type="table" target="#tab_0">Table 1</ref>). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Heterogeneous Compute Device Mapping</head><p>Next, we use Neural Code Comprehension to predict whether a given OpenCL program will run faster on a CPU or a GPU given its code, input data size, and work-group size (i.e., number of threads that work in a group with shared memory). To achieve that, we use the same experimental methodology presented by Cummins et al. <ref type="bibr" target="#b16">[17]</ref>, removing their specialized OpenCL source rewriter and replacing their code token embeddings with our XFGs and inst2vec. We concatenate the data and work-group sizes to the network inputs, and train with stratified 10-fold cross-validation.</p><p>In <ref type="table" target="#tab_4">Table 4</ref>, inst2vec is compared with a manual code feature extraction approach by Grewe et al. <ref type="bibr" target="#b26">[27]</ref> and DeepTune <ref type="bibr" target="#b16">[17]</ref>. Specifically, we compare the models' runtime prediction accuracies and the resulting speedups over a static mapping, which selects the device that yields the best average case performance. The results indicate that inst2vec outperforms Grewe et al. and is on-par with DeepTune. We believe that the better predictions in DeepTune are the result of training the embedding matrix in tandem with the high-level task, thereby specializing it to the dataset.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Optimal Thread Coarsening Factor Prediction</head><p>Our third example predicts the best-performing thread coarsening factor, a measure of the amount of work done per GPU thread, for a given OpenCL code. We again compare the achieved speedups of inst2vec with manual features <ref type="bibr" target="#b42">[43]</ref>, DeepTune, and DeepTune with transfer learning applied from the task in Section 6.2 (denoted by DeepTune-TL). Possible values for the factor are 1 (baseline for speedups), 2, 4, 8, 16, and 32. The results in <ref type="table" target="#tab_5">Table 5</ref> show that while inst2vec yields better speedups than DeepTune-TL in only half of the cases (possibly due to embedding specialization), the manually-extracted features are consistently outperformed. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this paper, we have empirically shown that semantics of statements can be successfully recovered from their context alone. This recovery relies both on proper granularity, where we propose to use filtered LLVM IR instructions; and on the grouping of statements, for which we use a mixture of dataand control-flow. We use this representation to perform three high-level classification and prediction tasks, outperforming all manually-extracted features and achieving results that are on-par with (and sometimes better than) two inherently different state-of-the-art specialized DNN solutions.</p><p>With this work, we attempt to pave the way towards mechanized code comprehension via machine learning, whether the code was authored by a human or automatically-generated. Further research could be conducted in various directions. Rather than directly using statements, the representation may be refined using part-based models, which have already been applied successfully in language models <ref type="bibr" target="#b51">[52]</ref>. inst2vec can also be used as a basis for neural code interpretation, using a modified Differentiable Neural Computer <ref type="bibr" target="#b25">[26]</ref> to enable execution of arbitrary code over DNNs. We make our code, datasets, embeddings, and figures available online as an open-source project <ref type="bibr" target="#b2">3</ref> .</p><p>A Statement Categories for inst2vec Clustering Results <ref type="table">Table 6</ref> presents the mapping from colors to statement categories that appear in <ref type="figure" target="#fig_3">Figure 6</ref>. The following rules apply to the categories in the   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Contextual flow processing scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>Figure 3: Anatomy of an LLVM IR statement.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Before and after preprocessing LLVM IR to inst2vec statements.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Two-dimensional t-SNE plots for learned embeddings (best viewed in color).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>phi { float, float }* [ &lt;%ID&gt;, &lt;%ID&gt; ], [ &lt;%ID&gt;, &lt;%ID&gt; ] struct/class operation &lt;%ID&gt; = alloca { i32, i32 }, align 4 int** operation &lt;%ID&gt; = phi i8** [ &lt;%ID&gt;, &lt;%ID&gt; ], [ &lt;%ID&gt;, &lt;%ID&gt; ] int* operation &lt;%ID&gt; = load i8*, i8** &lt;%ID&gt;, align 8 int operation &lt;%ID&gt; = add i16 &lt;%ID&gt;, &lt;INT&gt; type conversion operation &lt;%ID&gt; = bitcast &lt;4 x i32&gt; &lt;%ID&gt; to &lt;16 x i8&gt; global variable definition &lt;@ID&gt; = global i32 &lt;INT&gt;, align 4 &lt;d x int*&gt; operation &lt;%ID&gt; = phi &lt;4 x i8*&gt; [ &lt;%ID&gt;, &lt;%ID&gt; ], [ &lt;%ID&gt;, &lt;%ID&gt; ] load function pointer &lt;%ID&gt; = load { i32 (...)** }*, { i32 (...)** }** &lt;%ID&gt;, align 8 store function pointer store void ()* &lt;@ID&gt;, void ()** &lt;%ID&gt;, align 8 floating point** operation &lt;%ID&gt; = phi float** [ &lt;%ID&gt;, &lt;%ID&gt; ], [ &lt;%ID&gt;, &lt;%ID&gt; ] floating point* operation &lt;%ID&gt; = icmp eq double* &lt;%ID&gt;, null floating point operation &lt;%ID&gt; = getelementptr double, double* &lt;%ID&gt;, i64 &lt;%ID&gt; call void tail call void &lt;@ID&gt;(i64 &lt;INT&gt;)floating point&gt; operation &lt;%ID&gt; = call &lt;4 x float&gt; &lt;@ID&gt;(float* &lt;%ID&gt;) void function definition define linkonce_odr void &lt;@ID&gt;({ i32 (...)** }*) unnamed_addr invoke void invoke void &lt;@ID&gt;(i8* &lt;%ID&gt;) to label &lt;%ID&gt; unwind label &lt;%ID&gt;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="true"><head>Table 1 :</head><label>1</label><figDesc>inst2vec training dataset statistics</figDesc><table>Discipline 
Dataset 
Files 
LLVM IR 
Vocabulary 
XFG Stmt. 
Lines 
Size 
Pairs 

Machine Learning 
Tensorflow [1] 
2,492 
16,943,893 
220,554 
260,250,973 

High-Performance Computing 
AMD APP SDK [9] 
123 
1,304,669 
4,146 
45,081,359 
BLAS [21] 
300 
280,782 
566 
283,856 

Benchmarks 
NAS [54] 
268 
572,521 
1,793 
1,701,968 
Parboil [55] 
151 
118,575 
2,175 
151,916 
PolybenchGPU [25] 
40 
33,601 
577 
40,975 
Rodinia [13] 
92 
103,296 
3,861 
266,354 
SHOC [20] 
112 
399,287 
3,381 
12,096,508 

Scientific Computing 
COSMO [10] 
161 
152,127 
2,344 
2,338,153 

Operating Systems 
Linux kernel [39] 
1,988 
2,544,245 
136,545 
5,271,179 

Computer Vision 
OpenCV [33] 
442 
1,908,683 
39,920 
10,313,451 
NVIDIA samples [16] 
60 
43,563 
2,467 
74,915 

Synthetic 
Synthetic 
17,801 
26,045,547 
113,763 
303,054,685 

Total (Combined) 
-
24,030 
50,450,789 
8,565 
640,926,292 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2</head><label>2</label><figDesc>shows the analogy and test results for different context sizes. The analogies are divided into</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="true"><head>Table 2 :</head><label>2</label><figDesc>Analogy and test scores for inst2vec</figDesc><table>Context 
Size 

Syntactic Analogies 
Semantic Analogies 
Semantic Distance Test 

Types 
Options 
Conversions 
Data Structures 

1 
101 (18.04%) 
13 (24.53%) 
100 (6.63%) 
3 (37.50%) 
60.98% 
2 
226 (40.36%) 
45 (84.91%) 
134 (8.89%) 
7 (87.50%) 
79.12% 
3 
125 (22.32%) 
24 (45.28%) 
48 (3.18%) 
7 (87.50%) 
62.56% 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 3 :</head><label>3</label><figDesc>Algorithm classification test accuracy</figDesc><table>Metric 
Surface Features [46] 
RNN [46] 
TBCNN [46] 
inst2vec 
(RBF SVM + Bag-of-Trees) 

Test Accuracy [%] 
88.2 
84.8 
94.0 
94.83 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>Table 4 :</head><label>4</label><figDesc>Heterogeneous device mapping results</figDesc><table>Architecture 
Prediction Accuracy [%] 
Speedup 

Grewe et al. [27] 
DeepTune [17] 
inst2vec 
Grewe et al. 
DeepTune 
inst2vec 

AMD Tahiti 7970 
73.38 
83.68 
82.79 
2.91 
3.34 
3.42 
NVIDIA GTX 970 
72.94 
80.29 
81.76 
1.26 
1.41 
1.39 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="true"><head>Table 5 :</head><label>5</label><figDesc>Speedups achieved by coarsening threads</figDesc><table>Computing Platform 
Magni et al. [43] 
DeepTune [17] 
DeepTune-TL [17] 
inst2vec 

AMD Radeon HD 5900 
1.21 
1.10 
1.17 
1.25 
AMD Tahiti 7970 
1.01 
1.05 
1.23 
1.07 
NVIDIA GTX 480 
0.86 
1.10 
1.14 
1.02 
NVIDIA Tesla K20c 
0.94 
0.99 
0.93 
1.03 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>table : 1</head><label>:</label><figDesc>. A type operation generally refers to an operation, a function call, or the definition of a function, that returns an instance of type. 2. type* refers to a pointer of type. Asterisks could be chained for pointers-to-pointers. 3. &lt;d x type&gt; is a vector of d elements of type. 4. [d x type] is an array of d elements of type. 5. struct/class denotes an aggregate structure (e.g., C struct) of multiple types, e.g., {type_1, type_2, ..., type_n} in LLVM IR. 6. floating point can refer to either single-or double-precision floating point values. 7. int can refer to an integer of any bit-width. 8. void categories (call void, invoke void) refer to calls/invocations of functions that have no return value. 9. conversion operations denote type conversions within LLVM, which do not necessarily translate into code. 10. load function pointer, store function pointer refer to instructions that read or write function pointers into memory, respectively.</figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>Table</head><label></label><figDesc></figDesc><table></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">https://sites.google.com/site/treebasedcnn/ 2 https://www.github.com/ChrisCummins/paper-end2end-dl</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">https://www.github.com/spcl/ncc</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We wish to thank Theodoros Theodoridis, Kfir Levy, Tobias Grosser, and Yunyan Guo for fruitful discussions. We also thank MeteoSwiss, Hussein Harake, Colin McMurtrie, and the whole CSCS team granting access to the Greina machines, and for their excellent technical support. TBN is supported by the ETH Postdoctoral Fellowship.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">TensorFlow: Largescale machine learning on heterogeneous systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martín</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ashish</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paul</forename><surname>Barham</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eugene</forename><surname>Brevdo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhifeng</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><surname>Citro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><forename type="middle">S</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andy</forename><surname>Davis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthieu</forename><surname>Devin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sanjay</forename><surname>Ghemawat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ian</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Harp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Irving</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Isard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yangqing</forename><surname>Jia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rafal</forename><surname>Jozefowicz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lukasz</forename><surname>Kaiser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Manjunath</forename><surname>Kudlur</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Josh Levenberg, Dandelion Mané</title>
		<editor>Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fernanda Viégas</editor>
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
	<note>Oriol Vinyals. Software available from tensorflow.org</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Suggesting accurate method and class names</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miltiadis</forename><surname>Allamanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Earl</forename><forename type="middle">T</forename><surname>Barr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Bird</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><surname>Sutton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2015</title>
		<meeting>the 2015 10th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2015<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2015" />
			<biblScope unit="page" from="38" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A survey of machine learning for big code and naturalness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miltiadis</forename><surname>Allamanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Earl</forename><forename type="middle">T</forename><surname>Barr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Premkumar</forename><forename type="middle">T</forename><surname>Devanbu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><forename type="middle">A</forename><surname>Sutton</surname></persName>
		</author>
		<idno>abs/1709.06182</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Smartpaste: Learning to adapt source code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miltiadis</forename><surname>Allamanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Brockschmidt</surname></persName>
		</author>
		<idno>abs/1705.07867</idno>
		<imprint>
			<date type="published" when="2017" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Learning to represent programs with graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miltiadis</forename><surname>Allamanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Brockschmidt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mahmoud</forename><surname>Khademi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">A convolutional attention network for extreme summarization of source code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Miltiadis</forename><surname>Allamanis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hao</forename><surname>Peng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Charles</forename><forename type="middle">A</forename><surname>Sutton</surname></persName>
		</author>
		<idno>abs/1602.03001</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Uri</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meital</forename><surname>Zilberstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Omer</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eran</forename><surname>Yahav</surname></persName>
		</author>
		<idno>abs/1803.09473</idno>
		<title level="m">Learning distributed representations of code. CoRR</title>
		<imprint>
			<date type="published" when="2018" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">A general path-based representation for predicting program properties</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Uri</forename><surname>Alon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Meital</forename><surname>Zilberstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Omer</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eran</forename><surname>Yahav</surname></persName>
		</author>
		<idno>abs/1803.09544</idno>
		<imprint>
			<date type="published" when="2018" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">OpenCL accelerated parallel processing SDK</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Amd</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Amd</surname></persName>
		</author>
		<ptr target="https://developer.amd.com/amd-accelerated-parallel-processing-app-sdk/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Operational Convective-Scale Numerical Weather Prediction with the COSMO Model: Description and Sensitivities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Baldauf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Seifert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Förstner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Majewski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Raschendorfer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Reinhardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monthly Weather Review</title>
		<imprint>
			<biblScope unit="volume">139</biblScope>
			<biblScope unit="page" from="3887" to="3905" />
			<date type="published" when="2011-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">PHOG: Probabilistic model for code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pavol</forename><surname>Bielik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Veselin</forename><surname>Raychev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Vechev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of The 33rd International Conference on Machine Learning</title>
		<editor>Maria Florina Balcan and Kilian Q. Weinberger</editor>
		<meeting>The 33rd International Conference on Machine Learning<address><addrLine>New York, New York, USA</addrLine></address></meeting>
		<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2016-06" />
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="page" from="2933" to="2942" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Learning to superoptimize programs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rudy</forename><surname>Bunel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alban</forename><surname>Desmaison</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">Pawan</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">S</forename><surname>Philip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pushmeet</forename><surname>Torr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Kohli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Learning Representations</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Rodinia: A benchmark suite for heterogeneous computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Shuai</forename><surname>Che</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Boyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiayuan</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Tarjan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeremy</forename><forename type="middle">W</forename><surname>Sheaffer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sang-Ha</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kevin</forename><surname>Skadron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2009 IEEE International Symposium on Workload Characterization (IISWC), IISWC &apos;09</title>
		<meeting>the 2009 IEEE International Symposium on Workload Characterization (IISWC), IISWC &apos;09<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="44" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Combining analyses, combining optimizations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cliff</forename><surname>Click</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Keith</forename><forename type="middle">D</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Programming Languages and Systems</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A simple graph-based intermediate representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cliff</forename><surname>Click</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Paleczny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGPLAN Not</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="35" to="49" />
			<date type="published" when="1995-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Nvidia Corporation</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cuda</surname></persName>
		</author>
		<ptr target="http://developer.nvidia.com/object/cuda.html" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">End-to-end deep learning of optimization heuristics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Cummins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pavlos</forename><surname>Petoumenos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zheng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugh</forename><surname>Leather</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PACT. ACM</title>
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Efficiently computing static single assignment form and the control dependence graph</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ron</forename><surname>Cytron</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeanne</forename><surname>Ferrante</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barry</forename><forename type="middle">K</forename><surname>Rosen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><forename type="middle">N</forename><surname>Wegman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">Kenneth</forename><surname>Zadeck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Program. Lang. Syst</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="451" to="490" />
			<date type="published" when="1991-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">A deep language model for software code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hoa</forename><surname>Khanh Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Truyen</forename><surname>Tran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Trang</forename><surname>Pham</surname></persName>
		</author>
		<idno>abs/1608.02715</idno>
		<imprint>
			<date type="published" when="2016" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anthony</forename><surname>Danalis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Marin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Collin</forename><surname>Mccurdy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeremy</forename><forename type="middle">S</forename><surname>Meredith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kyle</forename><surname>Spafford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vinod</forename><surname>Tipparaju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Vetter</surname></persName>
		</author>
		<title level="m">The Scalable HeterOgeneous Computing (SHOC) benchmark suite</title>
		<imprint>
			<date type="published" when="2010-01" />
			<biblScope unit="page" from="63" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Basic linear algebra subprograms technical forum standard</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jack</forename><surname>Dongarra</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
			<biblScope unit="page" from="1" to="111" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Finding structure in time</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><forename type="middle">L</forename><surname>Elman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cognitive Science</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="179" to="211" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The program dependence graph and its use in optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeanne</forename><surname>Ferrante</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Karl</forename><forename type="middle">J</forename><surname>Ottenstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joe</forename><forename type="middle">D</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Program. Lang. Syst</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="319" to="349" />
			<date type="published" when="1987-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Github</forename><surname>Github</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Octoverse</surname></persName>
		</author>
		<ptr target="https://octoverse.github.com" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Auto-tuning a high-level language targeted to GPU codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><surname>Grauer-Gray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lifan</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Searles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sudhee</forename><surname>Ayalasomayajula</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hybrid computing using a neural network with dynamic external memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Graves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Wayne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Malcolm</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tim</forename><surname>Harley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ivo</forename><surname>Danihelka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Agnieszka</forename><surname>Grabskabarwińska</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergio</forename><forename type="middle">Gómez</forename><surname>Colmenarejo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edward</forename><surname>Grefenstette</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tiago</forename><surname>Ramalho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Agapiou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">538</biblScope>
			<biblScope unit="issue">7626</biblScope>
			<biblScope unit="page" from="471" to="476" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Portable mapping of data parallel programs to OpenCL for heterogeneous systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dominik</forename><surname>Grewe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zheng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael O&amp;apos;</forename><surname>Boyle</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013-02" />
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Deep API learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Xiaodong</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hongyu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dongmei</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sunghun</forename><surname>Kim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE 2016</title>
		<meeting>the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE 2016<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="631" to="642" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<monogr>
		<title level="m" type="main">Eigen v3</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gaël</forename><surname>Guennebaud</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Benoît</forename><surname>Jacob</surname></persName>
		</author>
		<ptr target="http://eigen.tuxfamily.org" />
		<imprint>
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Zellig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Harris</surname></persName>
		</author>
		<title level="m">Distributional Structure</title>
		<meeting><address><addrLine>Netherlands, Dordrecht</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1981" />
			<biblScope unit="page" from="3" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Long short-term memory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sepp</forename><surname>Hochreiter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jürgen</forename><surname>Schmidhuber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Neural Computation</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1735" to="1780" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Batch normalization: Accelerating deep network training by reducing internal covariate shift</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sergey</forename><surname>Ioffe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Szegedy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32Nd International Conference on International Conference on Machine Learning</title>
		<meeting>the 32Nd International Conference on International Conference on Machine Learning</meeting>
		<imprint>
			<date type="published" when="2015" />
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="page" from="448" to="456" />
		</imprint>
		<respStmt>
			<orgName>JMLR.org</orgName>
		</respStmt>
	</monogr>
	<note>ICML&apos;15</note>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Open source computer vision library</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Itseez</surname></persName>
		</author>
		<ptr target="https://github.com/itseez/opencv" />
		<imprint>
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<title level="m" type="main">Adam: A method for stochastic optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Diederik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jimmy</forename><surname>Kingma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ba</surname></persName>
		</author>
		<idno>abs/1412.6980</idno>
		<imprint>
			<date type="published" when="2014" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Time, clocks, and the ordering of events in a distributed system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leslie</forename><surname>Lamport</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="558" to="565" />
			<date type="published" when="1978-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">LLVM: a compilation framework for lifelong program analysis transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Lattner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vikram</forename><surname>Adve</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Code Generation and Optimization</title>
		<imprint>
			<date type="published" when="2004-03" />
			<biblScope unit="page" from="75" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Automatic feature generation for machine learning based optimizing compilation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugh</forename><surname>Leather</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Edwin</forename><surname>Bonilla</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael O&amp;apos;</forename><surname>Boyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 7th Annual IEEE/ACM International Symposium on Code Generation and Optimization, CGO &apos;09</title>
		<meeting>the 7th Annual IEEE/ACM International Symposium on Code Generation and Optimization, CGO &apos;09<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="81" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Learning to align the source code to the compiled object code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dor</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lior</forename><surname>Wolf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 34th International Conference on Machine Learning</title>
		<meeting>the 34th International Conference on Machine Learning<address><addrLine>Sydney, NSW, Australia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017-06-11" />
			<biblScope unit="page" from="2043" to="2051" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Linux kernel source code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Linux</surname></persName>
		</author>
		<ptr target="https://www.kernel.org/" />
		<imprint/>
	</monogr>
	<note>version 4.15.1</note>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
				<ptr target="https://github.com/flang-compiler/flang" />
		<title level="m">LLVM. Flang: a FORTRAN compiler frontend for LLVM</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">Clang: a C language family frontend for LLVM</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Llvm</surname></persName>
		</author>
		<idno>v4.0.0</idno>
		<ptr target="http://clang.llvm.org" />
		<imprint>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<monogr>
				<ptr target="https://llvm.org/docs/LangRef.html" />
		<title level="m">LLVM. LLVM language reference manual</title>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Automatic optimization of threadcoarsening for graphics processors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alberto</forename><surname>Magni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christophe</forename><surname>Dubach</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael O&amp;apos;</forename><surname>Boyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd International Conference on Parallel Architectures and Compilation, PACT &apos;14</title>
		<meeting>the 23rd International Conference on Parallel Architectures and Compilation, PACT &apos;14<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="455" to="466" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<monogr>
		<title level="m" type="main">Efficient estimation of word representations in vector space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<idno>abs/1301.3781</idno>
		<imprint>
			<date type="published" when="2013" />
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Distributed representations of words and phrases and their compositionality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ilya</forename><surname>Sutskever</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kai</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 26th International Conference on Neural Information Processing Systems</title>
		<meeting>the 26th International Conference on Neural Information Processing Systems<address><addrLine>USA</addrLine></address></meeting>
		<imprint>
			<publisher>Curran Associates Inc</publisher>
			<date type="published" when="2013" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="3111" to="3119" />
		</imprint>
	</monogr>
	<note>NIPS&apos;13</note>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Convolutional neural networks over tree structures for programming language processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lili</forename><surname>Mou</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ge</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lu</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tao</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zhi</forename><surname>Jin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence, AAAI&apos;16</title>
		<meeting>the Thirtieth AAAI Conference on Artificial Intelligence, AAAI&apos;16</meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="1287" to="1293" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Practical aggregation of semantical program properties for machine learning based optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mircea</forename><surname>Namolaru</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Albert</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Grigori</forename><surname>Fursin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ayal</forename><surname>Zaks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ari</forename><surname>Freund</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2010 International Conference on Compilers, Architectures and Synthesis for Embedded Systems, CASES &apos;10</title>
		<meeting>the 2010 International Conference on Compilers, Architectures and Synthesis for Embedded Systems, CASES &apos;10<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="197" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">A graph-based iterative compiler pass selection and phase ordering approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ricardo</forename><surname>Nobre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">A</forename><surname>Luiz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">João</forename><forename type="middle">M P</forename><surname>Martins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cardoso</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 17th ACM SIGPLAN/SIGBED Conference on Languages, Compilers, Tools, and Theory for Embedded Systems, LCTES 2016</title>
		<meeting>the 17th ACM SIGPLAN/SIGBED Conference on Languages, Compilers, Tools, and Theory for Embedded Systems, LCTES 2016<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="21" to="30" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Inducing ontological co-occurrence vectors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Patrick</forename><surname>Pantel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics, ACL &apos;05</title>
		<meeting>the 43rd Annual Meeting on Association for Computational Linguistics, ACL &apos;05<address><addrLine>Stroudsburg, PA, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computational Linguistics</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="125" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Using graph-based program characterization for predictive modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eunjung</forename><surname>Park</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Cavazos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marco</forename><forename type="middle">A</forename><surname>Alvarez</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Tenth International Symposium on Code Generation and Optimization, CGO &apos;12</title>
		<meeting>the Tenth International Symposium on Code Generation and Optimization, CGO &apos;12<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="196" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Code completion with statistical language models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Veselin</forename><surname>Raychev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Vechev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eran</forename><surname>Yahav</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIGPLAN Not</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="419" to="428" />
			<date type="published" when="2014-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Learning character-level representations for part-ofspeech tagging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dos</forename><surname>Cicero</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bianca</forename><surname>Santos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Zadrozny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 31st International Conference on Machine Learning</title>
		<editor>Eric P. Xing and Tony Jebara</editor>
		<meeting>the 31st International Conference on Machine Learning<address><addrLine>Bejing, China</addrLine></address></meeting>
		<imprint>
			<publisher>PMLR</publisher>
			<date type="published" when="2014-06" />
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1818" to="1826" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Stochastic superoptimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Schkufza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rahul</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Aiken</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems, ASPLOS &apos;13</title>
		<meeting>the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems, ASPLOS &apos;13<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2013" />
			<biblScope unit="page" from="305" to="316" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Performance characterization of the nas parallel benchmarks in opencl</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sangmin</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gangwon</forename><surname>Jo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jaejin</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2011 IEEE International Symposium on Workload Characterization, IISWC &apos;11</title>
		<meeting>the 2011 IEEE International Symposium on Workload Characterization, IISWC &apos;11<address><addrLine>Washington, DC, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2011" />
			<biblScope unit="page" from="137" to="148" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><forename type="middle">A</forename><surname>Stratton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Rodrigues</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I-Jui</forename><surname>Sung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nady</forename><surname>Obeid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Li-Wen</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nasser</forename><surname>Anssari</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geng</forename><forename type="middle">Daniel</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wen-Mei W</forename><surname>Hwu</surname></persName>
		</author>
		<title level="m">Parboil: A revised benchmark suite for scientific and commercial throughput computing. Center for Reliable and High-Performance Computing</title>
		<imprint>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Visualizing data using t-SNE</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Laurens</forename><surname>Van Der Maaten</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Geoffrey</forename><surname>Hinton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="2579" to="2605" />
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Programming with &quot;big code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>Vechev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eran</forename><surname>Yahav</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Found. Trends Program. Lang</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="231" to="284" />
			<date type="published" when="2016-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Deep learning code fragments for code clone detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Martin</forename><surname>White</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michele</forename><surname>Tufano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Vendome</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Denys</forename><surname>Poshyvanyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering, ASE 2016</title>
		<meeting>the 31st IEEE/ACM International Conference on Automated Software Engineering, ASE 2016<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2016" />
			<biblScope unit="page" from="87" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<analytic>
		<title level="a" type="main">A language model for statements of software code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yixiao</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yu</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jiaguang</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jian</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 32Nd IEEE/ACM International Conference on Automated Software Engineering, ASE 2017</title>
		<meeting>the 32Nd IEEE/ACM International Conference on Automated Software Engineering, ASE 2017<address><addrLine>Piscataway, NJ, USA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Press</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="682" to="687" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
